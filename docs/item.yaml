components:
  schemas:
    CreateItem:
      type: object
      properties:
        quantity:
          type: integer
          example: '20'
        expiry:
          type: integer
          example: '30000'
    Item:
      type: object
      properties:
        quantity:
          type: integer
          example: 20
        validTill:
          type: integer
          example: 1641127730096
    SellItem:
      type: object
      properties:
        quantity:
          type: integer
          example: 20
paths:
  /item/{item}/add:
    post:
      tags:
        - Item
      description: save item
      operationId: saveItem
      parameters:
        - name: item
          in: path
          required: true
          description: name if the item you want to save
          schema:
            type : string
            example: sugar
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateItem'
        required: true
      produces:
        - application/json
      responses:
        201:
          description: Successfully saved the item
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: '201'
                  message:
                    type: string
                    description: status message
                    example: "Item successfully added."
                  data:
                    type: object
        422:
          description: wrong parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 422 error status code
                    example: '422'
                  message:
                    type: string
                    description: status message
                    example: 'Quantity is invalid'
  /item/{item}/quantity:
    get:
      tags:
        - Item
      description: get item quantity and expiry
      operationId: getItem
      parameters:
        - name: item
          in: path
          required: true
          description: name of the item you want to retrieve
          schema:
            type : string
            example: sugar
      produces:
        - application/json
      responses:
        200:
          description: Successfully retrieved the item
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    description: status message
                    example: "Successfully retrieved sugar item."
                  data:
                    $ref: '#/components/schemas/Item'
        422:
          description: wrong parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 422 error status code
                    example: 422
                  message:
                    type: string
                    description: status message
                    example: 'Item is invalid'
  /item/{item}/sell:
    post:
      tags:
        - Item
      description: sell item
      operationId: sellItem
      parameters:
        - name: item
          in: path
          required: true
          description: name of the item you want to sell
          schema:
            type : string
            example: sugar
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SellItem'
        required: true
      produces:
        - application/json
      responses:
        200:
          description: Successfully sell the item
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    description: status message
                    example: "Success selling item."
                  data:
                    type: object
        422:
          description: wrong parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 422 error status code
                    example: 422
                  message:
                    type: string
                    description: status message
                    example: 'Item is invalid'
        404:
          description: item not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 404 error status code
                    example: '404'
                  message:
                    type: string
                    description: status message
                    example: 'Item not found or expired.'